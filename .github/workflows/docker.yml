name: Create and publish a Docker image

on:
  push

env:
  REGISTRY_GITHUB: ghcr.io
  REGISTRY_TIM: us-central1-docker.pkg.dev/misw4204-e5/cloud-converter
  REGISTRY_LAURA: us-central1-docker.pkg.dev/cloud-conversion-tool-cr/cloud-converter
  IMAGE_NAME: ${{ github.repository }}

jobs:
  converter-worker:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the GitHub Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY_GITHUB }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Log in to the GCP Artifact registry - Tim
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY_TIM }}
          username: _json_key
          password: ${{ secrets.GAR_JSON_KEY_TIM }}

      - name: Log in to the GCP Artifact registry - Laura
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY_LAURA }}
          username: _json_key
          password: ${{ secrets.GAR_JSON_KEY_LAURA }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.REGISTRY_GITHUB }}/${{ env.IMAGE_NAME }}/converter-worker
            ${{ env.REGISTRY_TIM }}/converter-worker
            ${{ env.REGISTRY_LAURA }}/converter-worker
          tags: |
            # set latest tag for master branch
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', 'main') }}
            type=ref,event=branch

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: converter-worker
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  converter-api:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the GitHub Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY_GITHUB }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Log in to the GCP Artifact registry - Tim
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY_TIM }}
          username: _json_key
          password: ${{ secrets.GAR_JSON_KEY_TIM }}

      - name: Log in to the GCP Artifact registry - Laura
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY_LAURA }}
          username: _json_key
          password: ${{ secrets.GAR_JSON_KEY_LAURA }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.REGISTRY_GITHUB }}/${{ env.IMAGE_NAME }}/converter-api
            ${{ env.REGISTRY_TIM }}/converter-api
            ${{ env.REGISTRY_LAURA }}/converter-api
          tags: |
            # set latest tag for master branch
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', 'main') }}
            type=ref,event=branch

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: converter-api
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
